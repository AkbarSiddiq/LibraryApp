import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Link from "next/link";
import { app, database, storage } from "../firebaseConfig";
import { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from "firebase/firestore";
import { getStorage, ref, uploadBytes, getDownloadURL, listAll, list } from "firebase/storage";

import { useEffect, useState } from "react";
import { useRouter } from "next/router";

export default function Home() {
  const [title, setTitle] = useState("");
  const [sinops, setSinops] = useState("");
  const [ID, setID] = useState(null);
  const [pages, setPages] = useState("");
  const [availibility, setAvailibility] = useState("");
  const [isUpdate, setIsUpdate] = useState(false);
  const [firedata, setFireData] = useState([]);
  const databaseRef = collection(database, "books");
  const storage = getStorage();
  const storageRef = ref(storage);
  const router = useRouter();
  useEffect(() => {
    const token = sessionStorage.getItem("Token");
    if (token) {
      getData();
    }
    if (!token) {
      router.push("/register");
    }
  }, []);

  const getData = async () => {
    await getDocs(databaseRef).then((response) => {
      setFireData(
        response.docs.map((data) => {
          return { ...data.data(), id: data.id };
        })
      );
    });
  };

  const getID = (id, title, sinops, pages, availibility) => {
    setID(id);
    setTitle(title);
    setSinops(sinops);
    setPages(pages);
    setAvailibility(availibility);
    setIsUpdate(true);
  };

  const logout = () => {
    sessionStorage.removeItem("Token");
    router.push("/");
  };

  return (
    <>
      <Head>
        <title>LibraryApp</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div class="flex">
        <div class="flex flex-col w-64 h-screen px-4 py-8 overflow-y-auto border-r">
          <h2 class="text-3xl font-semibold text-center text-blue-800">Books</h2>

          <div class="flex flex-col justify-between mt-6">
            <div>
              <ul>
                <li>
                  <a class="flex items-center px-4 py-2 text-gray-700 bg-gray-100 rounded-md " href="#">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                      />
                    </svg>

                    <span class="mx-4 font-medium">Books</span>
                  </a>
                </li>

                <li>
                  <a onClick={logout} class="flex cursor-pointer items-center px-4 py-2 mt-5 text-gray-600 rounded-md hover:bg-gray-200">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                      <path stroke-linecap="round" stroke-linejoin="round" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                    </svg>
                    <span class="mx-4 font-medium">Log Out</span>
                  </a>
                </li>
              </ul>
            </div>
          </div>
        </div>
        <div class="w-full h-full  overflow-y-auto">
          <div class="flex items-center justify-center ">
            <div className="bg-gray-700 h-full w-full">
              <div className="lg:grid lg:grid-cols-3 lg:gap-2 grid-row place-content-center mx-8">
                {firedata.map((data) => {
                  return (
                    <div class="flex max-w-md bg-gray-300 shadow-lg rounded-lg overflow-hidden my-8">
                      <img
                        src="https://images.unsplash.com/photo-1593811934519-000322ce831d?crop=entropy&cs=tinysrgb&fm=jpg&ixlib=rb-1.2.1&q=60&raw_url=true&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTM4fHxib29rfGVufDB8MHwwfHw%3D&auto=format&fit=crop&w=500"
                        class="w-1/3 object-cover bg-landscape"
                      ></img>
                      <div class="w-2/3 p-4">
                        <h1 class="text-gray-900 font-bold text-2xl">{data.title}</h1>
                        <p class="mt-2 text-gray-600 text-sm">{data.sinops}</p>
                        <p class="mt-2 text-gray-600 text-sm">Pages: {data.pages}</p>
                        <p class="mt-2 text-gray-600 text-sm">Availibility: {data.availibility}</p>
                        <div class="flex item-center justify-between mt-3">
                          <button class="px-3 py-2 bg-gray-800 text-white text-xs font-bold uppercase rounded" onClick={() => getID(data.id, data.title, data.pages, data.availibility)}>
                            Borrow
                          </button>
                        </div>
                      </div>
                    </div>
                  );
                })}
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
